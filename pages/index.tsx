import type { NextPage } from "next";
import Head from "next/head";
import { range, shuffle } from "lodash";
import styles from "../styles/Home.module.css";
import { ReactMixitup, StageType } from "react-mixitup";
import React from "react";

const Home: NextPage = () => {
  const [keys, setKeys] = React.useState(range(4));

  const data: Record<string, { href: string; title: string; text: string }> = {
    0: {
      href: "https://react-mixitup.ricsam.dev/",
      title: "Documentation",
      text: "Find in-depth information about react-mixitup.",
    },
    1: {
      href: "https://react-mixitup.ricsam.dev/docs/intro",
      title: "Learn",
      text: "Learn about react-mixitup with a short introduction",
    },
    2: {
      href: "https://react-mixitup.ricsam.dev/docs/faq",
      title: "FAQ",
      text: "Get answers to frequently asked questions.",
    },
    3: {
      href: "https://react-mixitup.ricsam.dev/blog",
      title: "Blog",
      text: "Get the latest news and read about tips and tricks.",
    },
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to{" "}
          <a href="https://react-mixitup.ricsam.dev/">react-mixitup</a> in
          CodeSandbox!
        </h1>

        <p className={styles.description}>
          <button
            onClick={() => {
              setKeys(shuffle(range(4)));
            }}
          >
            Mixitup
          </button>
        </p>

        <ReactMixitup
          keys={keys}
          renderCell={(key, style, ref) => {
            const { href, title, text } = data[String(key)];
            return (
              <a
                className={styles.card}
                href={href}
                key={key}
                ref={ref}
                style={{
                  // You must set the transition property here!
                  transition: "transform 300ms linear",
                  ...style,
                }}
              >
                <h2>{title} &rarr;</h2>
                <p>{text}</p>
              </a>
            );
          }}
          renderWrapper={(style, ref, cells, stage) => {
            return (
              <div
                className={styles.grid}
                style={{
                  transition: "height 300ms ease",
                  width:
                    stage === StageType.MEASURE ? "calc(100% - 64px)" : "100%",
                  ...style,
                }}
                ref={ref}
              >
                {cells}
              </div>
            );
          }}
          dynamicDirection="vertical"
          transitionDuration={300}
        />
      </main>
    </div>
  );
};

export default Home;
